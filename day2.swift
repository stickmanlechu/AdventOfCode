import Foundation

let input = """
forward 1
forward 2
down 5
down 5
down 4
down 9
up 6
up 7
down 2
forward 9
up 4
forward 7
forward 9
up 3
down 1
forward 5
down 3
forward 3
forward 3
forward 3
down 2
down 5
forward 7
down 7
up 7
down 9
down 1
down 4
down 9
down 2
forward 2
forward 4
up 7
up 1
forward 3
forward 8
forward 9
forward 6
forward 9
forward 1
forward 5
down 9
up 7
down 9
forward 2
forward 9
forward 1
forward 5
up 8
down 5
forward 4
up 6
up 9
forward 2
up 8
down 1
up 5
forward 3
down 1
forward 6
up 6
forward 9
forward 1
forward 3
down 4
down 9
down 8
up 9
down 9
down 2
down 4
forward 2
down 4
down 2
down 8
up 3
up 9
forward 3
down 5
down 1
up 6
up 6
down 4
up 3
forward 1
down 2
down 7
forward 1
down 4
forward 5
down 5
forward 3
forward 8
down 4
forward 3
forward 2
down 4
forward 6
forward 6
down 9
down 3
up 7
up 6
down 8
down 4
down 4
down 8
down 4
forward 5
up 7
down 8
down 4
down 5
down 3
forward 1
up 1
forward 9
forward 4
down 9
forward 5
up 4
down 3
up 7
up 2
down 5
down 2
forward 8
up 1
down 8
forward 2
forward 8
down 9
forward 3
forward 7
forward 1
down 2
down 8
forward 1
forward 9
forward 9
up 3
up 7
forward 9
down 4
up 6
forward 2
down 2
down 4
down 4
down 6
down 5
forward 2
down 8
down 1
up 6
up 1
up 4
down 5
forward 5
forward 4
forward 1
forward 9
up 9
down 9
down 5
down 7
up 6
up 2
forward 5
down 5
down 3
down 8
down 6
forward 4
down 9
up 3
forward 2
forward 9
forward 6
forward 5
down 5
down 1
down 2
forward 9
down 2
down 2
down 3
forward 3
forward 9
forward 1
down 3
down 8
forward 7
down 9
forward 4
up 3
up 7
up 4
down 5
forward 9
forward 2
forward 2
down 3
up 5
down 5
down 4
forward 2
forward 7
up 2
down 8
up 2
up 2
forward 2
down 2
forward 3
down 3
up 8
forward 7
up 5
forward 4
down 6
down 8
forward 4
forward 3
up 9
up 2
down 2
down 5
down 8
down 1
forward 9
down 6
forward 1
down 9
down 4
up 6
up 3
forward 1
down 8
up 3
down 6
down 7
down 2
forward 5
down 6
forward 8
up 7
down 5
down 3
forward 4
forward 5
forward 3
forward 4
forward 6
forward 2
forward 1
down 3
down 5
down 3
down 5
forward 4
down 7
forward 8
forward 5
up 7
up 3
forward 9
up 1
forward 9
up 8
down 3
forward 1
forward 6
forward 9
down 1
up 9
forward 5
down 6
forward 8
down 7
down 3
up 4
down 6
forward 5
forward 6
forward 5
up 2
down 5
up 7
up 4
up 5
forward 3
down 9
up 4
forward 9
forward 8
forward 6
down 5
down 4
down 2
up 5
up 7
up 2
forward 9
forward 9
down 9
down 4
up 2
forward 3
up 3
up 2
down 9
forward 8
forward 6
down 6
forward 3
down 1
forward 4
forward 9
forward 5
down 2
down 7
up 6
down 3
forward 7
down 3
up 3
up 8
forward 3
up 7
forward 5
down 7
forward 7
forward 3
down 6
down 3
forward 5
forward 9
up 8
down 7
down 3
down 7
down 4
down 1
down 7
up 6
forward 8
up 7
down 9
forward 6
down 4
forward 6
up 9
forward 4
down 5
up 3
forward 5
forward 6
down 8
up 9
forward 4
up 5
forward 4
forward 2
forward 8
down 7
forward 1
down 8
forward 8
forward 4
down 4
forward 5
down 2
down 5
forward 9
down 7
forward 1
down 1
forward 9
forward 3
forward 9
forward 8
down 5
down 6
forward 8
up 9
forward 7
down 1
forward 9
up 7
forward 2
forward 6
forward 1
down 8
down 6
down 7
down 6
up 5
down 5
forward 9
down 6
down 9
forward 9
down 7
up 7
forward 1
down 5
down 8
up 5
down 6
up 5
up 7
forward 3
forward 2
down 5
down 6
forward 3
down 4
down 5
up 4
forward 5
down 4
down 5
forward 4
down 1
forward 1
down 1
forward 4
forward 2
down 3
forward 1
down 1
forward 2
forward 2
forward 6
up 5
forward 5
down 9
down 1
forward 7
up 9
down 2
down 1
forward 3
up 5
down 8
forward 2
forward 1
down 7
forward 5
up 6
forward 2
up 5
forward 8
up 6
down 6
down 3
forward 1
forward 7
down 7
down 1
up 7
forward 2
up 5
forward 4
forward 9
forward 4
forward 2
forward 4
down 3
down 7
forward 1
up 9
up 2
forward 1
down 5
up 9
forward 6
down 7
down 2
down 7
down 2
down 1
down 7
down 6
up 1
up 4
down 9
up 3
forward 1
down 2
forward 4
up 4
up 9
down 4
forward 6
down 1
down 1
down 8
up 5
forward 1
up 6
down 5
forward 4
up 8
down 4
forward 4
forward 3
down 7
down 1
forward 3
forward 1
up 6
down 1
down 8
forward 6
down 4
down 6
forward 5
forward 3
forward 5
down 4
forward 7
down 6
down 6
down 9
up 9
forward 5
up 9
up 4
up 6
down 4
forward 3
up 2
down 7
down 8
forward 7
down 4
down 3
down 5
down 1
forward 5
up 4
down 3
down 3
down 6
forward 9
down 1
forward 4
down 9
forward 1
forward 4
down 1
up 5
down 6
forward 5
up 5
forward 5
down 8
down 1
down 8
up 1
down 1
forward 8
forward 3
up 2
forward 9
forward 1
forward 3
down 2
down 7
down 2
up 4
up 3
down 2
forward 2
forward 9
forward 8
down 8
forward 3
up 9
up 6
down 9
down 1
up 3
up 2
forward 2
down 6
up 2
up 1
down 9
down 3
down 6
up 7
up 5
forward 8
down 1
forward 7
down 6
down 1
up 9
forward 9
forward 8
down 3
down 9
down 5
forward 7
up 1
up 4
up 4
down 7
down 1
up 2
down 2
forward 8
forward 7
up 8
down 1
down 8
up 7
forward 1
down 9
forward 7
forward 1
down 4
down 8
down 1
forward 5
forward 8
forward 5
down 8
down 7
up 5
forward 8
down 5
up 9
down 5
down 9
forward 2
forward 6
forward 2
up 1
forward 4
forward 9
forward 7
down 7
down 3
forward 9
forward 6
up 5
forward 5
forward 7
down 9
forward 6
down 7
forward 5
forward 5
forward 4
forward 1
forward 1
up 7
forward 3
up 3
forward 6
up 3
down 9
forward 9
up 6
up 3
forward 2
down 2
forward 9
down 7
up 7
forward 6
forward 2
down 2
down 4
forward 1
forward 4
down 4
up 9
down 4
down 4
down 3
forward 6
forward 3
down 3
forward 5
forward 7
up 4
forward 1
forward 5
forward 2
forward 5
forward 5
forward 2
up 8
down 7
up 7
down 7
forward 1
forward 5
forward 3
forward 7
forward 5
forward 6
up 7
forward 3
down 7
down 2
up 9
forward 6
down 7
forward 9
up 8
down 1
up 8
up 2
down 7
down 6
down 5
up 7
forward 6
down 5
forward 7
down 6
down 2
up 3
up 7
up 5
forward 9
forward 2
down 1
down 5
up 9
forward 8
down 7
forward 1
up 6
down 1
down 3
forward 3
forward 6
down 4
forward 8
up 2
down 8
up 4
up 9
forward 8
down 9
forward 3
forward 7
down 5
forward 4
up 3
up 1
forward 7
down 6
up 4
down 3
forward 8
down 9
forward 2
down 8
forward 9
up 7
forward 2
up 1
down 7
down 1
forward 4
forward 5
down 4
down 9
forward 2
down 9
down 5
up 2
down 6
forward 8
up 6
down 3
down 5
down 1
up 7
down 5
forward 8
up 4
down 7
down 4
down 4
down 2
down 3
down 1
down 7
forward 4
down 4
down 7
down 7
down 9
up 1
up 7
forward 4
up 7
forward 6
forward 8
forward 2
forward 8
up 8
down 3
forward 7
down 9
forward 9
forward 6
up 3
down 4
down 3
forward 6
forward 2
forward 3
down 8
forward 1
forward 5
up 3
down 8
forward 7
forward 4
down 3
forward 2
down 9
down 9
forward 9
down 7
forward 6
forward 4
down 5
forward 9
forward 3
down 1
down 1
down 7
forward 8
down 3
forward 7
forward 8
up 3
forward 8
forward 8
up 6
forward 2
down 3
down 4
forward 9
up 8
down 9
forward 5
down 3
up 7
forward 5
down 2
forward 2
forward 1
down 6
down 1
up 4
forward 4
down 7
up 3
down 3
forward 4
forward 2
forward 1
forward 9
forward 7
forward 9
down 1
forward 6
down 5
up 7
down 9
down 2
up 4
down 2
down 2
down 1
down 2
down 5
down 4
down 6
forward 4
forward 9
forward 6
forward 7
up 9
up 2
forward 7
forward 9
up 5
forward 2
up 5
up 9
forward 9
down 8
forward 6
down 8
forward 4
down 1
down 4
forward 4
down 3
forward 4
forward 3
forward 9
down 5
forward 3
forward 2
forward 9
forward 8
down 2
forward 5
up 2
forward 1
down 3
forward 9
forward 8
down 9
forward 5
forward 1
down 1
down 9
down 6
forward 8
forward 1
down 5
up 5
forward 8
up 4
down 6
forward 1
up 2
down 3
down 1
down 8
down 2
up 6
down 5
down 2
down 3
forward 2
up 7
down 9
up 1
up 1
forward 7
forward 4
down 7
up 7
down 7
forward 5
up 2
down 7
forward 9
down 7
up 4
forward 2
forward 1
up 6
down 8
up 6
down 2
down 4
up 8
up 8
up 5
down 6
up 6
down 5
up 1
down 1
forward 6
up 7
forward 8
up 9
down 8
up 7
forward 9
up 4
down 5
forward 3
forward 6
forward 4
forward 4
down 7
forward 9
down 6
down 2
forward 9
forward 3
"""

enum Command {
    case forward(Int)
    case up(Int)
    case down(Int)
    
    init(_ string: String) {
        let comps = string.split(separator: " ")
        let value = Int(comps[1])!
        switch comps[0] {
        case "forward": self = .forward(value)
        case "up": self = .up(value)
        case "down": self = .down(value)
        default: fatalError()
        }
    }
}

func solve1(_ commands: [Command]) -> Int {
    let coordinates = commands.reduce((depth: 0, forward: 0)) { result, command in
        switch command {
        case .forward(let value): return (depth: result.depth, forward: result.forward + value)
        case .up(let value): return (depth: result.depth - value, forward: result.forward)
        case .down(let value): return (depth: result.depth + value, forward: result.forward)
        }
    }
    return coordinates.depth * coordinates.forward
}

func solve2(_ commands: [Command]) -> Int {
    let coordinates = commands.reduce((depth: 0, forward: 0, aim: 0)) { result, command in
        switch command {
        case .forward(let value): return (depth: result.depth + value * result.aim, forward: result.forward + value, aim: result.aim)
        case .up(let value): return (depth: result.depth, forward: result.forward, aim: result.aim - value)
        case .down(let value): return (depth: result.depth, forward: result.forward, aim: result.aim + value)
        }
    }
    return coordinates.depth * coordinates.forward
}

let commands = input
    .split(separator: "\n")
    .map(String.init)
    .map(Command.init)

let start = CFAbsoluteTimeGetCurrent()

//print(solve1(commands))
print(solve2(commands))

let diff = CFAbsoluteTimeGetCurrent() - start
print("\(#function) Took \(diff) seconds")

